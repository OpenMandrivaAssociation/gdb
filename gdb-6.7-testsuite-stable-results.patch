diff -up gdb-14.1/gdb/testsuite/gdb.base/fileio.c.22~ gdb-14.1/gdb/testsuite/gdb.base/fileio.c
--- gdb-14.1/gdb/testsuite/gdb.base/fileio.c.22~	2023-02-02 05:45:52.000000000 +0100
+++ gdb-14.1/gdb/testsuite/gdb.base/fileio.c	2023-12-04 01:08:21.273880030 +0100
@@ -559,6 +559,28 @@ strerrno (int err)
 int
 main ()
 {
+  /* These tests
+       Open for write but no write permission returns EACCES
+       Unlinking a file in a directory w/o write access returns EACCES
+     fail if we are being run as root - drop the privileges here.  */
+
+  if (geteuid () == 0)
+    {
+      uid_t uid = 99;
+
+      if (chown (OUTDIR, uid, uid) != 0)
+	{
+	  printf ("chown %d.%d %s: %s\n", (int) uid, (int) uid,
+		  OUTDIR, strerror (errno));
+	  exit (1);
+	}
+      if (setuid (uid) || geteuid () == 0)
+	{
+	  printf ("setuid %d: %s\n", (int) uid, strerror (errno));
+	  exit (1);
+	}
+    }
+
   /* Don't change the order of the calls.  They partly depend on each other */
   test_open ();
   test_write ();
diff -up gdb-14.1/gdb/testsuite/gdb.base/fileio.exp.22~ gdb-14.1/gdb/testsuite/gdb.base/fileio.exp
--- gdb-14.1/gdb/testsuite/gdb.base/fileio.exp.22~	2023-10-08 09:51:14.000000000 +0200
+++ gdb-14.1/gdb/testsuite/gdb.base/fileio.exp	2023-12-04 01:09:29.310425074 +0100
@@ -20,9 +20,9 @@ require {!target_info exists gdb,nofilei
 standard_testfile
 
 if {[is_remote host]} {
-    set outdir .
+    set outdir "fileio.dir"
 } else {
-    set outdir [standard_output_file {}]
+    set outdir [standard_output_file "fileio.dir"]
 }
 
 if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" \
@@ -36,7 +36,8 @@ set dir2 [standard_output_file dir2.file
 if {[file exists $dir2] && ![file writable $dir2]} {
     system "chmod +w $dir2"
 }
-system "rm -rf [standard_output_file *.fileio.test]"
+system "rm -rf [standard_output_file fileio.dir]"
+system "mkdir -m777 [standard_output_file fileio.dir]"
 
 set oldtimeout $timeout
 set timeout [expr "$timeout + 60"]
@@ -72,7 +73,7 @@ gdb_test continue \
 
 gdb_test "continue" ".*" ""
 
-catch "system \"chmod -f -w [standard_output_file nowrt.fileio.test]\""
+catch "system \"chmod -f -w [standard_output_file fileio.dir/nowrt.fileio.test]\""
 
 # If the user is root, we will always have write permission.
 if { [root_user] } {
@@ -267,8 +268,6 @@ gdb_test continue \
 gdb_exit
 
 # Make dir2 writable again so rm -rf of a build tree Just Works.
-if {[file exists $dir2] && ![file writable $dir2]} {
-    system "chmod +w $dir2"
-}
+system "chmod -R +w $outdir"
 
 set timeout $oldtimeout
